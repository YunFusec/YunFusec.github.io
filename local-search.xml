<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2024/08/17/1/"/>
    <url>/2024/08/17/1/</url>
    
    <content type="html"><![CDATA[<p>项目地址: <code>https://github.com/HackAllSec/hfinger</code></p><h2 id="简介"><a href="#简介" class="headerlink" title="[简介]"></a><strong>[<strong><strong>简介</strong></strong>]</strong></h2><p><strong>hfinger</strong> 是一个<strong>高性能</strong>、<strong>准确</strong>的命令行指纹识别工具，用于红队打点时快速准确识别指定目标的 Web 框架和 CMS 等信息。由于<strong>EHole</strong>很久没更新了，且存在一些缺点（误报、漏报、匹配不太灵活等），此工具根据 <code>finger.json</code> 文件中定义的指纹进行匹配，优化原有文件结构，增加匹配逻辑，增加错误页识别和被动识别模式。</p><h3 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h3><ul><li>高性能、精准的识别目标</li><li>支持同一目标匹配多个框架指纹识别</li><li>支持<strong>主动模式</strong>和<strong>被动模式</strong></li><li>支持根据错误页识别</li><li>根据响应 <code>Header</code>、<code>body</code> 和 <code>title</code> 与 <code>finger.json</code> 中定义的指纹进行匹配</li><li><code>finger.json</code>支持自定义匹配逻辑</li><li>支持随机UA头</li><li>支持多线程，线程数可通过 <code>-t</code> 参数调整</li><li>支持代理，通过 <code>-p</code> 参数指定代理</li><li>实时输出匹配结果，匹配到则使用绿色输出，未匹配到则使用白色输出</li><li>支持 JSON、XML 和 XLSX 格式的输出</li></ul><h3 id="指纹库"><a href="#指纹库" class="headerlink" title="指纹库"></a>指纹库</h3><ul><li>收录的产品、Web框架和CMS总数（根据不同cms的值统计，名称相同的指纹只记1次）：<strong>1177</strong></li><li>指纹总数量（数量小的原因是已将指纹进行优化和合并，对同一资产的指纹进行合并）：<strong>1412</strong></li></ul><p>兵在精而不在多，指纹数量也一样，看数量意义不大，关键看可以识别的产品、Web框架和CMS数量。</p><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="[使用方法]"></a><strong>[<strong><strong>使用方法</strong></strong>]</strong></h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ol><li>直接访问<code>https://github.com/HackAllSec/hfinger/releases</code>，选择并下载适合自己电脑的最新Releases版本解压即可</li><li>确保你已经安装了 Go 语言环境，然后克隆本仓库并编译：</li><li><pre><code class="hljs">git clone https://github.com/HackAllSec/hfinger.gitcd hfingergo build<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br><span class="hljs-number">4.</span> Windows下可直接运行`build_windows.bat`编译。<br><br>### 命令行参数<br><br></code></pre></td></tr></table></figure> █████         ██████   ███▒▒███         ███▒▒███ ▒▒▒ ▒███████    ▒███ ▒▒▒  ████  ████████    ███████  ██████  ████████ ▒███▒▒███  ███████   ▒▒███ ▒▒███▒▒███  ███▒▒███ ███▒▒███▒▒███▒▒███ ▒███ ▒███ ▒▒▒███▒     ▒███  ▒███ ▒███ ▒███ ▒███▒███████  ▒███ ▒▒▒ ▒███ ▒███   ▒███      ▒███  ▒███ ▒███ ▒███ ▒███▒███▒▒▒   ▒███ ████ █████  █████     █████ ████ █████▒▒███████▒▒██████  █████▒▒▒▒ ▒▒▒▒▒  ▒▒▒▒▒     ▒▒▒▒▒ ▒▒▒▒ ▒▒▒▒▒  ▒▒▒▒▒███ ▒▒▒▒▒▒  ▒▒▒▒▒                                     ███ ▒███                                    ▒▒██████                                     ▒▒▒▒▒▒                     By:Hack All Sec</code></pre></li></ol><p>A high-performance command-line tool for web framework and CMS fingerprinting</p><p>Usage:<br>  hfinger [flags]</p><p>Flags:<br>  -f, –file string          Read assets from local files for fingerprint recognition, with one target per line<br>  -h, –help                 help for hfinger<br>  -l, –listen string        Using a proxy resource collector to retrieve targets, example: 127.0.0.1:6789<br>  -j, –output-json string   Output all results to a JSON file<br>  -s, –output-xlsx string   Output all results to a Excel file<br>  -x, –output-xml string    Output all results to a XML file<br>  -p, –proxy string         Specify the proxy for accessing the target, supporting HTTP and SOCKS, example: <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a><br>  -t, –thread int           Number of fingerprint recognition threads (default 100)<br>      –update               Update fingerprint database<br>      –upgrade              Upgrade to the latest version<br>  -u, –url string           Specify the recognized target,example: <a href="https://www.example.com/">https://www.example.com</a><br>  -v, –version              Display the current version of the tool</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>### 使用示例<br><br>#### 主动模式<br><br>单个 URL 识别:<br><br></code></pre></td></tr></table></figure><p>hfinger -u <a href="https://www.hackall.cn/">https://www.hackall.cn</a></p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><br><span class="hljs-section">从文件中读取目标并识别:</span><br><br></code></pre></td></tr></table></figure><p>hfinger -f targets.txt</p><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><br><span class="hljs-section">指定代理:</span><br><br></code></pre></td></tr></table></figure><p>hfinger -u <a href="https://www.hackall.cn/">https://www.hackall.cn</a> -p <a href="http://127.0.0.1:8080/">http://127.0.0.1:8080</a></p><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs coffeescript"><br>输出 <span class="hljs-built_in">JSON</span> 格式识别结果到文件:<br><br></code></pre></td></tr></table></figure><p>hfinger -u <a href="https://www.hackall.cn/">https://www.hackall.cn</a> -j output.json</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><br>输出 <span class="hljs-keyword">XML</span> <span class="hljs-title">格式识别结果到文件:</span><br><span class="hljs-title"></span><br></code></pre></td></tr></table></figure><p>hfinger -u <a href="https://www.hackall.cn/">https://www.hackall.cn</a> -x output.xml</p><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><br><span class="hljs-attribute">输出 XLSX 格式识别结果到文件</span><span class="hljs-punctuation">:</span><br><span class="hljs-punctuation"></span><br></code></pre></td></tr></table></figure><p>hfinger -u <a href="https://www.hackall.cn/">https://www.hackall.cn</a> -s output.xlsx</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs clean"><br>#### 被动模式<br><br>用法和`Xray`类似，包括启动监听、添加上游代理，工具联动等等。被动模式可以识别主动模式无法识别的指纹，且比主动扫描更加全面。<br><br>启动监听即可：<br><br></code></pre></td></tr></table></figure><p>hfinger -l 127.0.0.1:8888 -s res.xlsx</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey"><br>要支持HTTPS网站需要将`certs`目录下的证书导入浏览器。<br><br>**联动其它工具**<br><br>联动`Xray`或其它工具有两种方式：<br><br><span class="hljs-title">方式一:</span> `Target -&gt; Xray/Burp -&gt; hfinger`<br><br>在上边的基础上浏览器设置代理经过`Xray`或`Burp`，然后在`Xray`或`Burp`配置上游代理为`hfinger`的监听地址即可。<br><br><span class="hljs-title">方式二:</span> `Target -&gt; hfinger -&gt; Xray`<br><br>启动`hfinger`被动模式，使用`-p`参数设置上游代理，浏览器设置代理为`hfinger`的监听地址即可。<br><br></code></pre></td></tr></table></figure><p>hfinger -l 127.0.0.1:8888 -p <a href="http://127.0.0.1:7777/">http://127.0.0.1:7777</a> -s res.xlsx</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jboss-cli"><br>![图片]<span class="hljs-params">(https://mmbiz.qpic.cn/sz_mmbiz_jpg/s7bObPUU0RT11bAwHBGU4qxiayh7tskusxc14f1BfTNKIqHSoKKbibeAGgFCib8icPIcFjSiaBSCMJScmBm09CgEsaw/640?<span class="hljs-attr">wx_fmt</span>=jpeg&amp;<span class="hljs-attr">from</span>=appmsg&amp;<span class="hljs-attr">tp</span>=webp&amp;<span class="hljs-attr">wxfrom</span>=5&amp;<span class="hljs-attr">wx_lazy</span>=1&amp;<span class="hljs-attr">wx_co</span>=1)</span><br><br><span class="hljs-comment">### 输出示例</span><br><br>1. 实时输出到终端<br><br>2. JSON 输出格式:<br><br></code></pre></td></tr></table></figure><p>   [<br>     {<br>    “url”: “<a href="https://example.com/">https://example.com</a>“,<br>    “cms”: “若依”,<br>    “server”: “cloudflare”,<br>    “statuscode”: 200,<br>    “title”: “登录”<br>     },<br>     {<br>    “url”: “<a href="https://example.com/">https://example.com</a>“,<br>    “cms”: “Shiro”,<br>    “server”: “cloudflare”,<br>    “statuscode”: 200,<br>    “title”: “登录”<br>     }<br>   ]<br>   <figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs crmsh"><br><span class="hljs-number">3</span>. <span class="hljs-keyword">XML</span> <span class="hljs-title">输出格式:</span><br><span class="hljs-title"></span><br></code></pre></td></tr></table></figure><br>   <results><br>     <result><br>    <URL><a href="https://blog.hackall.cn/">https://blog.hackall.cn</a></URL><br>    <CMS>Typecho</CMS><br>    <Server>cloudflare</Server><br>    <StatusCode>404</StatusCode><br>    <Title>Hack All Sec的博客 - Hack All Sec&#39;s Blog</Title><br>     </result><br>   </results></p><pre><code class="hljs">4. XLSX输出格式：| URL                     | CMS     | Server     | StatusCode | Title                                    || ----------------------- | ------- | ---------- | ---------- | ---------------------------------------- || https://blog.hackall.cn | Typecho | cloudflare | 200        | Hack All Sec的博客 - Hack All Sec&#39;s Blog |![图片](https://mmbiz.qpic.cn/sz_mmbiz_jpg/s7bObPUU0RT11bAwHBGU4qxiayh7tskusPkfhhUibZJZmIaMK0JCvNzPALK9sIRxHlHcps2ibp9R83yIkXpCN6n1Q/640?wx_fmt=jpeg&amp;from=appmsg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1)</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>360 新天擎终端安全管理系统存在信息泄露漏洞</title>
    <link href="/2024/06/14/360%20%E6%96%B0%E5%A4%A9%E6%93%8E%E7%BB%88%E7%AB%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%AD%98%E5%9C%A8%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/"/>
    <url>/2024/06/14/360%20%E6%96%B0%E5%A4%A9%E6%93%8E%E7%BB%88%E7%AB%AF%E5%AE%89%E5%85%A8%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E5%AD%98%E5%9C%A8%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%E6%BC%8F%E6%B4%9E/</url>
    
    <content type="html"><![CDATA[<h2 id="360-新天擎终端安全管理系统存在信息泄露漏洞"><a href="#360-新天擎终端安全管理系统存在信息泄露漏洞" class="headerlink" title="360 新天擎终端安全管理系统存在信息泄露漏洞"></a>360 新天擎终端安全管理系统存在信息泄露漏洞</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-built_in">GET</span> /runtime/admin_log_confcache<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>网络设备漏洞</category>
      
    </categories>
    
    
    <tags>
      
      <tag>360天擎</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
